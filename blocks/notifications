#!/bin/env bash
#
# i3blocks integration with dunst.
# Author: Vivien Didelot <vivien.didelot@gmail.com>
#
# dunst caches a notification and signals i3blocks.
# i3blocks catches the signal and prints the cached notification.
#
# Put this rule at the end of your ~/.config/dunst/dunstrc:
#
#     [i3blocks]
#         summary = "*"
#         script = FULL_PATH_OF_THIS_SCRIPT
#
# Add this block in your ~/.i3blocks.conf:
#
#     [dunst]
#     command=THIS_SCRIPT
#     signal=12

cache_file=~/.cache/i3blocks/notification
index_file=~/.cache/i3blocks/notification-index

# Ensure the cache exists
mkdir -p $(dirname "$cache_file")
touch "$cache_file"
touch "$index_file"

index="$(cat $index_file)"
if [[ -z "$index" ]]
then
    index=1 # actually a line number, don't yell at me
    echo "$index" > "$index_file"
fi

if env | grep -q BLOCK_
then # called by i3blocks

    # get total count, for possible clearing
    total_notifications=$(wc -l "$cache_file" | awk '{print $1}')
    
    # clear notification on click
    [[ "$BLOCK_BUTTON" -eq 1 ]] && sed -i "$[$total_notifications - $index + 1]"d "$cache_file"
    # clear all on right click
    [[ "$BLOCK_BUTTON" -eq 3 ]] && cp /dev/null "$cache_file"

    # get total count, reset index if necessary
    total_notifications=$(wc -l "$cache_file" | awk '{print $1}')

    if [[ "$index" -gt "$total_notifications" ]]
    then
        index="$total_notifications"
        echo "$index" > "$index_file"
    fi
        

    # change index on scroll
    if [[ "$BLOCK_BUTTON" -eq 4 ]]
    then
        index=$[$index-1]
    elif [[ "$BLOCK_BUTTON" -eq 5 ]]
    then
        index=$[$index+1]
    fi

    if [[ "$index" -gt "$total_notifications" ]]
    then
        index="$total_notifications"
    elif [[ "$index" -lt 1 ]]
    then
        index=1
    fi
    echo "$index" > "$index_file"
    

    # source the notification
    eval "$(tail -$index $cache_file | head -1)"

    case "$URGENCY" in
        LOW)
            color="#83b3a3"
            symbol=""
            ;;
        NORMAL)
            color="#7f9f7f"
            symbol=""
            ;;
        CRITICAL)
            color="#dba3a3"
            symbol=""
            ;;
        *)
            # unknown urgency, certainly empty notification
            exit 0
            ;;
    esac

    full_text="<span color='#a9a999'>$APPNAME</span> <span color='$color'><b>$SUMMARY</b></span> $BODY"
    short_text="$SUMMARY"

    if [[ $total_notifications -gt 1 ]]
    then
        full_text="<span color='#6c6c6c'>($index/$total_notifications)</span> $full_text"
    fi

    # Output the status block
    echo "<span color='$color'>$symbol</span> $full_text"
    echo "$short_text"
    echo ""
    exit 0

else # called by dunst

    # store the notification
    cat << EOF >> "$cache_file"
APPNAME="$1"; SUMMARY="$2"; BODY="$3"; ICON="$4"; URGENCY="$5"
EOF

    # signal i3blocks that there is a new notification
    pkill -RTMIN+13 i3blocks
    exit

fi

